---
openapi: 3.0.0
info:
  title: Deno Land APIs
  description: Describes the API available on api.deno.land.
  contact:
    url: https://deno.land/
  version: 2.0.0
servers:
  - url: https://apiland.deno.dev
    description: The latest deployment of this repository on Deploy.
tags:
- name: registry
  description: Provides APIs related to the module registry.
- name: infrastructure
  description: APIs that relate to internal infrastructure.
paths:
  /v2/modules:
    get:
      tags:
      - registry
      summary: Provides a list of registered modules.
      description: Provides a list of registered modules.
      responses:
        "200":
          description: A JSON array of registered modules.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Module"
  /v2/modules/{name}:
    summary: Represents a registered module
    description: >
      This resource represents an individual registered module repository.
    get:
      tags:
        - registry
      summary: Gets a registered module by ID.
      parameters:
        - name: name
          in: path
          description: Module name
          required: true
          schema:
            $ref: "#/components/schemas/ModuleName"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Module"
  /v2/modules/{name}/{version}:
    summary: Represents a version/tag of a registered module.
    get:
      tags:
        - registry
      summary: Gets a registered module by ID and version.
      parameters:
        - name: name
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/ModuleName"
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VersionedModule"
  /v2/modules/{name}/{version}/raw/{path}:
    summary: Retrieves the original file from a versioned module.
    get:
      tags:
        - registry
      summary: Retrieves the original file from a versioned module.
      parameters:
        - name: name
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/ModuleName"
        - name: version
          in: path
          required: true
          schema:
            type: string
            example: v10.0.1
        - name: path
          in: path
          required: true
          schema:
            type: string
            example: mod.ts
      responses:
        "200":
          description: Successful operation
          content:
            application/*:
              schema:
                type: string
                format: binary
            text/*:
              schema:
                type: string
                format: binary
  /ping:
    get:
      tags:
        - infrastructure
      summary: Server heartbeat operation
      description: >
        This operation shows how to override the global security defined above,
        as we want to open it up for all users.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pong"
components:
  schemas:
    File:
      type: object
      properties:
        path:
          type: string
          example: /mod.ts
        size:
          type: number
          format: int64
          example: 3454
        type:
          type: string
          enum:
            - file
            - dir
          example: file
        raw_url:
          type: string
          format: uri
          example: "https://api.deno.land/modules/oak/v10.0.1/raw/mod.ts"
    Module:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ModuleName"
        description:
          type: string
          nullable: true
          example: A middleware framework for Deno
        latest_version:
          type: string
          nullable: true
          example: v10.0.1
        versions:
          type: array
          items:
            type: string
          example: ["v10.0.0", "v10.0.1"]
      required:
        - name
        - description
        - latest_version
        - versions
      description: Representation of a module
    ModuleName:
      type: string
      pattern: "^[A-Za-z_]{3,}$"
      example: oak
    VersionedModule:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ModuleName"
        description:
          type: string
          nullable: true
          example: A middleware framework for Deno
        version:
          type: string
          example: v10.0.1
        uploaded_at:
          type: string
          format: date-time
          example: 2022-05-06T01:03:14.774Z
        upload_options:
          $ref: "#/components/schemas/UploadOptions"
        files:
          type: array
          items:
            $ref: "#/components/schemas/File"
    UploadOptions:
      type: object
      properties:
        type:
          type: string
          example: github
        repository:
          type: string
          example: oakserver/oak
        ref:
          type: string
          example: v10.0.1
      required:
        - type
        - repository
        - ref
    pong:
      type: object
      properties:
        pong:
          type: boolean
